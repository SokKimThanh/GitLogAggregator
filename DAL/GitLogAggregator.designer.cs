#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GitLogAggregatorDB")]
	public partial class GitLogAggregatorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuthor(Author instance);
    partial void UpdateAuthor(Author instance);
    partial void DeleteAuthor(Author instance);
    partial void InsertProjectWeek(ProjectWeek instance);
    partial void UpdateProjectWeek(ProjectWeek instance);
    partial void DeleteProjectWeek(ProjectWeek instance);
    partial void InsertCommitGroupMember(CommitGroupMember instance);
    partial void UpdateCommitGroupMember(CommitGroupMember instance);
    partial void DeleteCommitGroupMember(CommitGroupMember instance);
    partial void InsertCommitPeriod(CommitPeriod instance);
    partial void UpdateCommitPeriod(CommitPeriod instance);
    partial void DeleteCommitPeriod(CommitPeriod instance);
    partial void InsertCommit(Commit instance);
    partial void UpdateCommit(Commit instance);
    partial void DeleteCommit(Commit instance);
    partial void InsertConfigAuthor(ConfigAuthor instance);
    partial void UpdateConfigAuthor(ConfigAuthor instance);
    partial void DeleteConfigAuthor(ConfigAuthor instance);
    partial void InsertConfigFile(ConfigFile instance);
    partial void UpdateConfigFile(ConfigFile instance);
    partial void DeleteConfigFile(ConfigFile instance);
    partial void InsertChatbotSummary(ChatbotSummary instance);
    partial void UpdateChatbotSummary(ChatbotSummary instance);
    partial void DeleteChatbotSummary(ChatbotSummary instance);
    partial void InsertInternshipDirectory(InternshipDirectory instance);
    partial void UpdateInternshipDirectory(InternshipDirectory instance);
    partial void DeleteInternshipDirectory(InternshipDirectory instance);
    #endregion
		
		public GitLogAggregatorDataContext() : 
				base(global::DAL.Properties.Settings.Default.GitLogAggregatorDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Author> Authors
		{
			get
			{
				return this.GetTable<Author>();
			}
		}
		
		public System.Data.Linq.Table<ProjectWeek> ProjectWeeks
		{
			get
			{
				return this.GetTable<ProjectWeek>();
			}
		}
		
		public System.Data.Linq.Table<CommitGroupMember> CommitGroupMembers
		{
			get
			{
				return this.GetTable<CommitGroupMember>();
			}
		}
		
		public System.Data.Linq.Table<CommitPeriod> CommitPeriods
		{
			get
			{
				return this.GetTable<CommitPeriod>();
			}
		}
		
		public System.Data.Linq.Table<Commit> Commits
		{
			get
			{
				return this.GetTable<Commit>();
			}
		}
		
		public System.Data.Linq.Table<ConfigAuthor> ConfigAuthors
		{
			get
			{
				return this.GetTable<ConfigAuthor>();
			}
		}
		
		public System.Data.Linq.Table<ConfigFile> ConfigFiles
		{
			get
			{
				return this.GetTable<ConfigFile>();
			}
		}
		
		public System.Data.Linq.Table<ChatbotSummary> ChatbotSummaries
		{
			get
			{
				return this.GetTable<ChatbotSummary>();
			}
		}
		
		public System.Data.Linq.Table<InternshipDirectory> InternshipDirectories
		{
			get
			{
				return this.GetTable<InternshipDirectory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authors")]
	public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthorID;
		
		private string _AuthorName;
		
		private string _AuthorEmail;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntitySet<ConfigAuthor> _ConfigAuthors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnAuthorEmailChanging(string value);
    partial void OnAuthorEmailChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Author()
		{
			this._ConfigAuthors = new EntitySet<ConfigAuthor>(new Action<ConfigAuthor>(this.attach_ConfigAuthors), new Action<ConfigAuthor>(this.detach_ConfigAuthors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorEmail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AuthorEmail
		{
			get
			{
				return this._AuthorEmail;
			}
			set
			{
				if ((this._AuthorEmail != value))
				{
					this.OnAuthorEmailChanging(value);
					this.SendPropertyChanging();
					this._AuthorEmail = value;
					this.SendPropertyChanged("AuthorEmail");
					this.OnAuthorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_ConfigAuthor", Storage="_ConfigAuthors", ThisKey="AuthorID", OtherKey="AuthorID")]
		public EntitySet<ConfigAuthor> ConfigAuthors
		{
			get
			{
				return this._ConfigAuthors;
			}
			set
			{
				this._ConfigAuthors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigAuthors(ConfigAuthor entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_ConfigAuthors(ConfigAuthor entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectWeeks")]
	public partial class ProjectWeek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectWeekId;
		
		private string _ProjectWeekName;
		
		private System.Nullable<System.DateTime> _WeekStartDate;
		
		private System.Nullable<System.DateTime> _WeekEndDate;
		
		private int _InternshipDirectoryId;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntitySet<Commit> _Commits;
		
		private EntityRef<InternshipDirectory> _InternshipDirectory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectWeekIdChanging(int value);
    partial void OnProjectWeekIdChanged();
    partial void OnProjectWeekNameChanging(string value);
    partial void OnProjectWeekNameChanged();
    partial void OnWeekStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeekStartDateChanged();
    partial void OnWeekEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeekEndDateChanged();
    partial void OnInternshipDirectoryIdChanging(int value);
    partial void OnInternshipDirectoryIdChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public ProjectWeek()
		{
			this._Commits = new EntitySet<Commit>(new Action<Commit>(this.attach_Commits), new Action<Commit>(this.detach_Commits));
			this._InternshipDirectory = default(EntityRef<InternshipDirectory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectWeekId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectWeekId
		{
			get
			{
				return this._ProjectWeekId;
			}
			set
			{
				if ((this._ProjectWeekId != value))
				{
					this.OnProjectWeekIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectWeekId = value;
					this.SendPropertyChanged("ProjectWeekId");
					this.OnProjectWeekIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectWeekName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectWeekName
		{
			get
			{
				return this._ProjectWeekName;
			}
			set
			{
				if ((this._ProjectWeekName != value))
				{
					this.OnProjectWeekNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectWeekName = value;
					this.SendPropertyChanged("ProjectWeekName");
					this.OnProjectWeekNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeekStartDate
		{
			get
			{
				return this._WeekStartDate;
			}
			set
			{
				if ((this._WeekStartDate != value))
				{
					this.OnWeekStartDateChanging(value);
					this.SendPropertyChanging();
					this._WeekStartDate = value;
					this.SendPropertyChanged("WeekStartDate");
					this.OnWeekStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeekEndDate
		{
			get
			{
				return this._WeekEndDate;
			}
			set
			{
				if ((this._WeekEndDate != value))
				{
					this.OnWeekEndDateChanging(value);
					this.SendPropertyChanging();
					this._WeekEndDate = value;
					this.SendPropertyChanged("WeekEndDate");
					this.OnWeekEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternshipDirectoryId", DbType="Int NOT NULL")]
		public int InternshipDirectoryId
		{
			get
			{
				return this._InternshipDirectoryId;
			}
			set
			{
				if ((this._InternshipDirectoryId != value))
				{
					if (this._InternshipDirectory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInternshipDirectoryIdChanging(value);
					this.SendPropertyChanging();
					this._InternshipDirectoryId = value;
					this.SendPropertyChanged("InternshipDirectoryId");
					this.OnInternshipDirectoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectWeek_Commit", Storage="_Commits", ThisKey="ProjectWeekId", OtherKey="ProjectWeekId")]
		public EntitySet<Commit> Commits
		{
			get
			{
				return this._Commits;
			}
			set
			{
				this._Commits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InternshipDirectory_ProjectWeek", Storage="_InternshipDirectory", ThisKey="InternshipDirectoryId", OtherKey="ConfigID", IsForeignKey=true)]
		public InternshipDirectory InternshipDirectory
		{
			get
			{
				return this._InternshipDirectory.Entity;
			}
			set
			{
				InternshipDirectory previousValue = this._InternshipDirectory.Entity;
				if (((previousValue != value) 
							|| (this._InternshipDirectory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InternshipDirectory.Entity = null;
						previousValue.ProjectWeeks.Remove(this);
					}
					this._InternshipDirectory.Entity = value;
					if ((value != null))
					{
						value.ProjectWeeks.Add(this);
						this._InternshipDirectoryId = value.ID;
					}
					else
					{
						this._InternshipDirectoryId = default(int);
					}
					this.SendPropertyChanged("InternshipDirectory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commits(Commit entity)
		{
			this.SendPropertyChanging();
			entity.ProjectWeek = this;
		}
		
		private void detach_Commits(Commit entity)
		{
			this.SendPropertyChanging();
			entity.ProjectWeek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommitGroupMembers")]
	public partial class CommitGroupMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodID;
		
		private int _CommitId;
		
		private System.Nullable<System.DateTime> _AddedAt;
		
		private EntityRef<CommitPeriod> _CommitPeriod;
		
		private EntityRef<Commit> _Commit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodIDChanging(int value);
    partial void OnPeriodIDChanged();
    partial void OnCommitIdChanging(int value);
    partial void OnCommitIdChanged();
    partial void OnAddedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnAddedAtChanged();
    #endregion
		
		public CommitGroupMember()
		{
			this._CommitPeriod = default(EntityRef<CommitPeriod>);
			this._Commit = default(EntityRef<Commit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PeriodID
		{
			get
			{
				return this._PeriodID;
			}
			set
			{
				if ((this._PeriodID != value))
				{
					if (this._CommitPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodID = value;
					this.SendPropertyChanged("PeriodID");
					this.OnPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CommitId
		{
			get
			{
				return this._CommitId;
			}
			set
			{
				if ((this._CommitId != value))
				{
					if (this._Commit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommitIdChanging(value);
					this.SendPropertyChanging();
					this._CommitId = value;
					this.SendPropertyChanged("CommitId");
					this.OnCommitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedAt
		{
			get
			{
				return this._AddedAt;
			}
			set
			{
				if ((this._AddedAt != value))
				{
					this.OnAddedAtChanging(value);
					this.SendPropertyChanging();
					this._AddedAt = value;
					this.SendPropertyChanged("AddedAt");
					this.OnAddedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommitPeriod_CommitGroupMember", Storage="_CommitPeriod", ThisKey="PeriodID", OtherKey="PeriodID", IsForeignKey=true)]
		public CommitPeriod CommitPeriod
		{
			get
			{
				return this._CommitPeriod.Entity;
			}
			set
			{
				CommitPeriod previousValue = this._CommitPeriod.Entity;
				if (((previousValue != value) 
							|| (this._CommitPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommitPeriod.Entity = null;
						previousValue.CommitGroupMembers.Remove(this);
					}
					this._CommitPeriod.Entity = value;
					if ((value != null))
					{
						value.CommitGroupMembers.Add(this);
						this._PeriodID = value.PeriodID;
					}
					else
					{
						this._PeriodID = default(int);
					}
					this.SendPropertyChanged("CommitPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commit_CommitGroupMember", Storage="_Commit", ThisKey="CommitId", OtherKey="CommitId", IsForeignKey=true)]
		public Commit Commit
		{
			get
			{
				return this._Commit.Entity;
			}
			set
			{
				Commit previousValue = this._Commit.Entity;
				if (((previousValue != value) 
							|| (this._Commit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commit.Entity = null;
						previousValue.CommitGroupMembers.Remove(this);
					}
					this._Commit.Entity = value;
					if ((value != null))
					{
						value.CommitGroupMembers.Add(this);
						this._CommitId = value.CommitId;
					}
					else
					{
						this._CommitId = default(int);
					}
					this.SendPropertyChanged("Commit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommitPeriods")]
	public partial class CommitPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PeriodID;
		
		private string _PeriodName;
		
		private string _PeriodDuration;
		
		private System.DateTime _PeriodStartDate;
		
		private System.DateTime _PeriodEndDate;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntitySet<CommitGroupMember> _CommitGroupMembers;
		
		private EntitySet<ChatbotSummary> _ChatbotSummaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPeriodIDChanging(int value);
    partial void OnPeriodIDChanged();
    partial void OnPeriodNameChanging(string value);
    partial void OnPeriodNameChanged();
    partial void OnPeriodDurationChanging(string value);
    partial void OnPeriodDurationChanged();
    partial void OnPeriodStartDateChanging(System.DateTime value);
    partial void OnPeriodStartDateChanged();
    partial void OnPeriodEndDateChanging(System.DateTime value);
    partial void OnPeriodEndDateChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public CommitPeriod()
		{
			this._CommitGroupMembers = new EntitySet<CommitGroupMember>(new Action<CommitGroupMember>(this.attach_CommitGroupMembers), new Action<CommitGroupMember>(this.detach_CommitGroupMembers));
			this._ChatbotSummaries = new EntitySet<ChatbotSummary>(new Action<ChatbotSummary>(this.attach_ChatbotSummaries), new Action<ChatbotSummary>(this.detach_ChatbotSummaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PeriodID
		{
			get
			{
				return this._PeriodID;
			}
			set
			{
				if ((this._PeriodID != value))
				{
					this.OnPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodID = value;
					this.SendPropertyChanged("PeriodID");
					this.OnPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PeriodName
		{
			get
			{
				return this._PeriodName;
			}
			set
			{
				if ((this._PeriodName != value))
				{
					this.OnPeriodNameChanging(value);
					this.SendPropertyChanging();
					this._PeriodName = value;
					this.SendPropertyChanged("PeriodName");
					this.OnPeriodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodDuration", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PeriodDuration
		{
			get
			{
				return this._PeriodDuration;
			}
			set
			{
				if ((this._PeriodDuration != value))
				{
					this.OnPeriodDurationChanging(value);
					this.SendPropertyChanging();
					this._PeriodDuration = value;
					this.SendPropertyChanged("PeriodDuration");
					this.OnPeriodDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime PeriodStartDate
		{
			get
			{
				return this._PeriodStartDate;
			}
			set
			{
				if ((this._PeriodStartDate != value))
				{
					this.OnPeriodStartDateChanging(value);
					this.SendPropertyChanging();
					this._PeriodStartDate = value;
					this.SendPropertyChanged("PeriodStartDate");
					this.OnPeriodStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime PeriodEndDate
		{
			get
			{
				return this._PeriodEndDate;
			}
			set
			{
				if ((this._PeriodEndDate != value))
				{
					this.OnPeriodEndDateChanging(value);
					this.SendPropertyChanging();
					this._PeriodEndDate = value;
					this.SendPropertyChanged("PeriodEndDate");
					this.OnPeriodEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommitPeriod_CommitGroupMember", Storage="_CommitGroupMembers", ThisKey="PeriodID", OtherKey="PeriodID")]
		public EntitySet<CommitGroupMember> CommitGroupMembers
		{
			get
			{
				return this._CommitGroupMembers;
			}
			set
			{
				this._CommitGroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommitPeriod_ChatbotSummary", Storage="_ChatbotSummaries", ThisKey="PeriodID", OtherKey="PeriodID")]
		public EntitySet<ChatbotSummary> ChatbotSummaries
		{
			get
			{
				return this._ChatbotSummaries;
			}
			set
			{
				this._ChatbotSummaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommitGroupMembers(CommitGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.CommitPeriod = this;
		}
		
		private void detach_CommitGroupMembers(CommitGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.CommitPeriod = null;
		}
		
		private void attach_ChatbotSummaries(ChatbotSummary entity)
		{
			this.SendPropertyChanging();
			entity.CommitPeriod = this;
		}
		
		private void detach_ChatbotSummaries(ChatbotSummary entity)
		{
			this.SendPropertyChanging();
			entity.CommitPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commits")]
	public partial class Commit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommitId;
		
		private string _CommitHash;
		
		private string _CommitMessage;
		
		private System.DateTime _CommitDate;
		
		private string _Author;
		
		private string _AuthorEmail;
		
		private int _ProjectWeekId;
		
		private System.DateTime _Date;
		
		private string _Period;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntitySet<CommitGroupMember> _CommitGroupMembers;
		
		private EntityRef<ProjectWeek> _ProjectWeek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommitIdChanging(int value);
    partial void OnCommitIdChanged();
    partial void OnCommitHashChanging(string value);
    partial void OnCommitHashChanged();
    partial void OnCommitMessageChanging(string value);
    partial void OnCommitMessageChanged();
    partial void OnCommitDateChanging(System.DateTime value);
    partial void OnCommitDateChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnAuthorEmailChanging(string value);
    partial void OnAuthorEmailChanged();
    partial void OnProjectWeekIdChanging(int value);
    partial void OnProjectWeekIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public Commit()
		{
			this._CommitGroupMembers = new EntitySet<CommitGroupMember>(new Action<CommitGroupMember>(this.attach_CommitGroupMembers), new Action<CommitGroupMember>(this.detach_CommitGroupMembers));
			this._ProjectWeek = default(EntityRef<ProjectWeek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommitId
		{
			get
			{
				return this._CommitId;
			}
			set
			{
				if ((this._CommitId != value))
				{
					this.OnCommitIdChanging(value);
					this.SendPropertyChanging();
					this._CommitId = value;
					this.SendPropertyChanged("CommitId");
					this.OnCommitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitHash", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CommitHash
		{
			get
			{
				return this._CommitHash;
			}
			set
			{
				if ((this._CommitHash != value))
				{
					this.OnCommitHashChanging(value);
					this.SendPropertyChanging();
					this._CommitHash = value;
					this.SendPropertyChanged("CommitHash");
					this.OnCommitHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitMessage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CommitMessage
		{
			get
			{
				return this._CommitMessage;
			}
			set
			{
				if ((this._CommitMessage != value))
				{
					this.OnCommitMessageChanging(value);
					this.SendPropertyChanging();
					this._CommitMessage = value;
					this.SendPropertyChanged("CommitMessage");
					this.OnCommitMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommitDate", DbType="DateTime NOT NULL")]
		public System.DateTime CommitDate
		{
			get
			{
				return this._CommitDate;
			}
			set
			{
				if ((this._CommitDate != value))
				{
					this.OnCommitDateChanging(value);
					this.SendPropertyChanging();
					this._CommitDate = value;
					this.SendPropertyChanged("CommitDate");
					this.OnCommitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("FirstCommitAuthor");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorEmail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AuthorEmail
		{
			get
			{
				return this._AuthorEmail;
			}
			set
			{
				if ((this._AuthorEmail != value))
				{
					this.OnAuthorEmailChanging(value);
					this.SendPropertyChanging();
					this._AuthorEmail = value;
					this.SendPropertyChanged("AuthorEmail");
					this.OnAuthorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectWeekId", DbType="Int NOT NULL")]
		public int ProjectWeekId
		{
			get
			{
				return this._ProjectWeekId;
			}
			set
			{
				if ((this._ProjectWeekId != value))
				{
					if (this._ProjectWeek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectWeekIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectWeekId = value;
					this.SendPropertyChanged("ProjectWeekId");
					this.OnProjectWeekIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commit_CommitGroupMember", Storage="_CommitGroupMembers", ThisKey="CommitId", OtherKey="CommitId")]
		public EntitySet<CommitGroupMember> CommitGroupMembers
		{
			get
			{
				return this._CommitGroupMembers;
			}
			set
			{
				this._CommitGroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectWeek_Commit", Storage="_ProjectWeek", ThisKey="ProjectWeekId", OtherKey="ProjectWeekId", IsForeignKey=true)]
		public ProjectWeek ProjectWeek
		{
			get
			{
				return this._ProjectWeek.Entity;
			}
			set
			{
				ProjectWeek previousValue = this._ProjectWeek.Entity;
				if (((previousValue != value) 
							|| (this._ProjectWeek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectWeek.Entity = null;
						previousValue.Commits.Remove(this);
					}
					this._ProjectWeek.Entity = value;
					if ((value != null))
					{
						value.Commits.Add(this);
						this._ProjectWeekId = value.ProjectWeekId;
					}
					else
					{
						this._ProjectWeekId = default(int);
					}
					this.SendPropertyChanged("ProjectWeek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommitGroupMembers(CommitGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Commit = this;
		}
		
		private void detach_CommitGroupMembers(CommitGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Commit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigAuthors")]
	public partial class ConfigAuthor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfigID;
		
		private int _AuthorID;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntityRef<Author> _Author;
		
		private EntityRef<ConfigFile> _ConfigFile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigIDChanging(int value);
    partial void OnConfigIDChanged();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public ConfigAuthor()
		{
			this._Author = default(EntityRef<Author>);
			this._ConfigFile = default(EntityRef<ConfigFile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ConfigID
		{
			get
			{
				return this._ConfigID;
			}
			set
			{
				if ((this._ConfigID != value))
				{
					if (this._ConfigFile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfigIDChanging(value);
					this.SendPropertyChanging();
					this._ConfigID = value;
					this.SendPropertyChanged("ConfigID");
					this.OnConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_ConfigAuthor", Storage="_Author", ThisKey="AuthorID", OtherKey="AuthorID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Author Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				Author previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.ConfigAuthors.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.ConfigAuthors.Add(this);
						this._AuthorID = value.AuthorID;
					}
					else
					{
						this._AuthorID = default(int);
					}
					this.SendPropertyChanged("FirstCommitAuthor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigFile_ConfigAuthor", Storage="_ConfigFile", ThisKey="ConfigID", OtherKey="ConfigID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ConfigFile ConfigFile
		{
			get
			{
				return this._ConfigFile.Entity;
			}
			set
			{
				ConfigFile previousValue = this._ConfigFile.Entity;
				if (((previousValue != value) 
							|| (this._ConfigFile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigFile.Entity = null;
						previousValue.ConfigAuthors.Remove(this);
					}
					this._ConfigFile.Entity = value;
					if ((value != null))
					{
						value.ConfigAuthors.Add(this);
						this._ConfigID = value.ConfigID;
					}
					else
					{
						this._ConfigID = default(int);
					}
					this.SendPropertyChanged("ConfigFile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigFiles")]
	public partial class ConfigFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConfigID;
		
		private string _ProjectDirectory;
		
		private int _InternshipDirectoryId;
		
		private System.DateTime _InternshipStartDate;
		
		private System.DateTime _InternshipEndDate;
		
		private int _Weeks;
		
		private System.DateTime _FirstCommitDate;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntitySet<ConfigAuthor> _ConfigAuthors;
		
		private EntityRef<InternshipDirectory> _InternshipDirectory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConfigIDChanging(int value);
    partial void OnConfigIDChanged();
    partial void OnProjectDirectoryChanging(string value);
    partial void OnProjectDirectoryChanged();
    partial void OnInternshipDirectoryIdChanging(int value);
    partial void OnInternshipDirectoryIdChanged();
    partial void OnInternshipStartDateChanging(System.DateTime value);
    partial void OnInternshipStartDateChanged();
    partial void OnInternshipEndDateChanging(System.DateTime value);
    partial void OnInternshipEndDateChanged();
    partial void OnWeeksChanging(int value);
    partial void OnWeeksChanged();
    partial void OnFirstCommitDateChanging(System.DateTime value);
    partial void OnFirstCommitDateChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public ConfigFile()
		{
			this._ConfigAuthors = new EntitySet<ConfigAuthor>(new Action<ConfigAuthor>(this.attach_ConfigAuthors), new Action<ConfigAuthor>(this.detach_ConfigAuthors));
			this._InternshipDirectory = default(EntityRef<InternshipDirectory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfigID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConfigID
		{
			get
			{
				return this._ConfigID;
			}
			set
			{
				if ((this._ConfigID != value))
				{
					this.OnConfigIDChanging(value);
					this.SendPropertyChanging();
					this._ConfigID = value;
					this.SendPropertyChanged("ConfigID");
					this.OnConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDirectory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectDirectory
		{
			get
			{
				return this._ProjectDirectory;
			}
			set
			{
				if ((this._ProjectDirectory != value))
				{
					this.OnProjectDirectoryChanging(value);
					this.SendPropertyChanging();
					this._ProjectDirectory = value;
					this.SendPropertyChanged("ProjectDirectory");
					this.OnProjectDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternshipDirectoryId", DbType="Int NOT NULL")]
		public int InternshipDirectoryId
		{
			get
			{
				return this._InternshipDirectoryId;
			}
			set
			{
				if ((this._InternshipDirectoryId != value))
				{
					if (this._InternshipDirectory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInternshipDirectoryIdChanging(value);
					this.SendPropertyChanging();
					this._InternshipDirectoryId = value;
					this.SendPropertyChanged("InternshipDirectoryId");
					this.OnInternshipDirectoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternshipStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime InternshipStartDate
		{
			get
			{
				return this._InternshipStartDate;
			}
			set
			{
				if ((this._InternshipStartDate != value))
				{
					this.OnInternshipStartDateChanging(value);
					this.SendPropertyChanging();
					this._InternshipStartDate = value;
					this.SendPropertyChanged("InternshipStartDate");
					this.OnInternshipStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternshipEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime InternshipEndDate
		{
			get
			{
				return this._InternshipEndDate;
			}
			set
			{
				if ((this._InternshipEndDate != value))
				{
					this.OnInternshipEndDateChanging(value);
					this.SendPropertyChanging();
					this._InternshipEndDate = value;
					this.SendPropertyChanged("InternshipEndDate");
					this.OnInternshipEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weeks", DbType="Int NOT NULL")]
		public int Weeks
		{
			get
			{
				return this._Weeks;
			}
			set
			{
				if ((this._Weeks != value))
				{
					this.OnWeeksChanging(value);
					this.SendPropertyChanging();
					this._Weeks = value;
					this.SendPropertyChanged("Weeks");
					this.OnWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstCommitDate", DbType="DateTime NOT NULL")]
		public System.DateTime FirstCommitDate
		{
			get
			{
				return this._FirstCommitDate;
			}
			set
			{
				if ((this._FirstCommitDate != value))
				{
					this.OnFirstCommitDateChanging(value);
					this.SendPropertyChanging();
					this._FirstCommitDate = value;
					this.SendPropertyChanged("FirstCommitDate");
					this.OnFirstCommitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigFile_ConfigAuthor", Storage="_ConfigAuthors", ThisKey="ConfigID", OtherKey="ConfigID")]
		public EntitySet<ConfigAuthor> ConfigAuthors
		{
			get
			{
				return this._ConfigAuthors;
			}
			set
			{
				this._ConfigAuthors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InternshipDirectory_ConfigFile", Storage="_InternshipDirectory", ThisKey="InternshipDirectoryId", OtherKey="ConfigID", IsForeignKey=true)]
		public InternshipDirectory InternshipDirectory
		{
			get
			{
				return this._InternshipDirectory.Entity;
			}
			set
			{
				InternshipDirectory previousValue = this._InternshipDirectory.Entity;
				if (((previousValue != value) 
							|| (this._InternshipDirectory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InternshipDirectory.Entity = null;
						previousValue.ConfigFiles.Remove(this);
					}
					this._InternshipDirectory.Entity = value;
					if ((value != null))
					{
						value.ConfigFiles.Add(this);
						this._InternshipDirectoryId = value.ID;
					}
					else
					{
						this._InternshipDirectoryId = default(int);
					}
					this.SendPropertyChanged("InternshipDirectory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigAuthors(ConfigAuthor entity)
		{
			this.SendPropertyChanging();
			entity.ConfigFile = this;
		}
		
		private void detach_ConfigAuthors(ConfigAuthor entity)
		{
			this.SendPropertyChanging();
			entity.ConfigFile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChatbotSummary")]
	public partial class ChatbotSummary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PeriodID;
		
		private string _Attendance;
		
		private string _AssignedTasks;
		
		private string _ContentResults;
		
		private string _SupervisorComments;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntityRef<CommitPeriod> _CommitPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPeriodIDChanging(int value);
    partial void OnPeriodIDChanged();
    partial void OnAttendanceChanging(string value);
    partial void OnAttendanceChanged();
    partial void OnAssignedTasksChanging(string value);
    partial void OnAssignedTasksChanged();
    partial void OnContentResultsChanging(string value);
    partial void OnContentResultsChanged();
    partial void OnSupervisorCommentsChanging(string value);
    partial void OnSupervisorCommentsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public ChatbotSummary()
		{
			this._CommitPeriod = default(EntityRef<CommitPeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ConfigID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodID", DbType="Int NOT NULL")]
		public int PeriodID
		{
			get
			{
				return this._PeriodID;
			}
			set
			{
				if ((this._PeriodID != value))
				{
					if (this._CommitPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._PeriodID = value;
					this.SendPropertyChanged("PeriodID");
					this.OnPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance", DbType="NVarChar(255)")]
		public string Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				if ((this._Attendance != value))
				{
					this.OnAttendanceChanging(value);
					this.SendPropertyChanging();
					this._Attendance = value;
					this.SendPropertyChanged("Attendance");
					this.OnAttendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTasks", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AssignedTasks
		{
			get
			{
				return this._AssignedTasks;
			}
			set
			{
				if ((this._AssignedTasks != value))
				{
					this.OnAssignedTasksChanging(value);
					this.SendPropertyChanging();
					this._AssignedTasks = value;
					this.SendPropertyChanged("AssignedTasks");
					this.OnAssignedTasksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentResults", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ContentResults
		{
			get
			{
				return this._ContentResults;
			}
			set
			{
				if ((this._ContentResults != value))
				{
					this.OnContentResultsChanging(value);
					this.SendPropertyChanging();
					this._ContentResults = value;
					this.SendPropertyChanged("ContentResults");
					this.OnContentResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorComments", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SupervisorComments
		{
			get
			{
				return this._SupervisorComments;
			}
			set
			{
				if ((this._SupervisorComments != value))
				{
					this.OnSupervisorCommentsChanging(value);
					this.SendPropertyChanging();
					this._SupervisorComments = value;
					this.SendPropertyChanged("SupervisorComments");
					this.OnSupervisorCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommitPeriod_ChatbotSummary", Storage="_CommitPeriod", ThisKey="PeriodID", OtherKey="PeriodID", IsForeignKey=true)]
		public CommitPeriod CommitPeriod
		{
			get
			{
				return this._CommitPeriod.Entity;
			}
			set
			{
				CommitPeriod previousValue = this._CommitPeriod.Entity;
				if (((previousValue != value) 
							|| (this._CommitPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommitPeriod.Entity = null;
						previousValue.ChatbotSummaries.Remove(this);
					}
					this._CommitPeriod.Entity = value;
					if ((value != null))
					{
						value.ChatbotSummaries.Add(this);
						this._PeriodID = value.PeriodID;
					}
					else
					{
						this._PeriodID = default(int);
					}
					this.SendPropertyChanged("CommitPeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InternshipDirectories")]
	public partial class InternshipDirectory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _InternshipWeekFolder;
		
		private System.DateTime _DateModified;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private EntitySet<ProjectWeek> _ProjectWeeks;
		
		private EntitySet<ConfigFile> _ConfigFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInternshipWeekFolderChanging(string value);
    partial void OnInternshipWeekFolderChanged();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    #endregion
		
		public InternshipDirectory()
		{
			this._ProjectWeeks = new EntitySet<ProjectWeek>(new Action<ProjectWeek>(this.attach_ProjectWeeks), new Action<ProjectWeek>(this.detach_ProjectWeeks));
			this._ConfigFiles = new EntitySet<ConfigFile>(new Action<ConfigFile>(this.attach_ConfigFiles), new Action<ConfigFile>(this.detach_ConfigFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ConfigID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternshipWeekFolder", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string InternshipWeekFolder
		{
			get
			{
				return this._InternshipWeekFolder;
			}
			set
			{
				if ((this._InternshipWeekFolder != value))
				{
					this.OnInternshipWeekFolderChanging(value);
					this.SendPropertyChanging();
					this._InternshipWeekFolder = value;
					this.SendPropertyChanged("InternshipWeekFolder");
					this.OnInternshipWeekFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InternshipDirectory_ProjectWeek", Storage="_ProjectWeeks", ThisKey="ConfigID", OtherKey="InternshipDirectoryId")]
		public EntitySet<ProjectWeek> ProjectWeeks
		{
			get
			{
				return this._ProjectWeeks;
			}
			set
			{
				this._ProjectWeeks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InternshipDirectory_ConfigFile", Storage="_ConfigFiles", ThisKey="ConfigID", OtherKey="InternshipDirectoryId")]
		public EntitySet<ConfigFile> ConfigFiles
		{
			get
			{
				return this._ConfigFiles;
			}
			set
			{
				this._ConfigFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectWeeks(ProjectWeek entity)
		{
			this.SendPropertyChanging();
			entity.InternshipDirectory = this;
		}
		
		private void detach_ProjectWeeks(ProjectWeek entity)
		{
			this.SendPropertyChanging();
			entity.InternshipDirectory = null;
		}
		
		private void attach_ConfigFiles(ConfigFile entity)
		{
			this.SendPropertyChanging();
			entity.InternshipDirectory = this;
		}
		
		private void detach_ConfigFiles(ConfigFile entity)
		{
			this.SendPropertyChanging();
			entity.InternshipDirectory = null;
		}
	}
}
#pragma warning restore 1591

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GitLogAggregatorDB")]
	public partial class GitLogAggregatorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConfigFile(ConfigFile instance);
    partial void UpdateConfigFile(ConfigFile instance);
    partial void DeleteConfigFile(ConfigFile instance);
    partial void InsertInternshipDirectory(InternshipDirectory instance);
    partial void UpdateInternshipDirectory(InternshipDirectory instance);
    partial void DeleteInternshipDirectory(InternshipDirectory instance);
    #endregion
		
		public GitLogAggregatorDataContext() : 
				base(global::DAL.Properties.Settings.Default.GitLogAggregatorDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GitLogAggregatorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ConfigFile> ConfigFiles
		{
			get
			{
				return this.GetTable<ConfigFile>();
			}
		}
		
		public System.Data.Linq.Table<InternshipDirectory> InternshipDirectories
		{
			get
			{
				return this.GetTable<InternshipDirectory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigFiles")]
	public partial class ConfigFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProjectDirectory;
		
		private System.Nullable<int> _InternshipDirectoryId;
		
		private string _Author;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<int> _Weeks;
		
		private System.Nullable<System.DateTime> _FirstCommitDate;
		
		private EntityRef<InternshipDirectory> _InternshipDirectory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProjectDirectoryChanging(string value);
    partial void OnProjectDirectoryChanged();
    partial void OnInternshipDirectoryIdChanging(System.Nullable<int> value);
    partial void OnInternshipDirectoryIdChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnWeeksChanging(System.Nullable<int> value);
    partial void OnWeeksChanged();
    partial void OnFirstCommitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstCommitDateChanged();
    #endregion
		
		public ConfigFile()
		{
			this._InternshipDirectory = default(EntityRef<InternshipDirectory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDirectory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectDirectory
		{
			get
			{
				return this._ProjectDirectory;
			}
			set
			{
				if ((this._ProjectDirectory != value))
				{
					this.OnProjectDirectoryChanging(value);
					this.SendPropertyChanging();
					this._ProjectDirectory = value;
					this.SendPropertyChanged("ProjectDirectory");
					this.OnProjectDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternshipDirectoryId", DbType="Int")]
		public System.Nullable<int> InternshipDirectoryId
		{
			get
			{
				return this._InternshipDirectoryId;
			}
			set
			{
				if ((this._InternshipDirectoryId != value))
				{
					if (this._InternshipDirectory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInternshipDirectoryIdChanging(value);
					this.SendPropertyChanging();
					this._InternshipDirectoryId = value;
					this.SendPropertyChanged("InternshipDirectoryId");
					this.OnInternshipDirectoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(100)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weeks", DbType="Int")]
		public System.Nullable<int> Weeks
		{
			get
			{
				return this._Weeks;
			}
			set
			{
				if ((this._Weeks != value))
				{
					this.OnWeeksChanging(value);
					this.SendPropertyChanging();
					this._Weeks = value;
					this.SendPropertyChanged("Weeks");
					this.OnWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstCommitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstCommitDate
		{
			get
			{
				return this._FirstCommitDate;
			}
			set
			{
				if ((this._FirstCommitDate != value))
				{
					this.OnFirstCommitDateChanging(value);
					this.SendPropertyChanging();
					this._FirstCommitDate = value;
					this.SendPropertyChanged("FirstCommitDate");
					this.OnFirstCommitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InternshipDirectory_ConfigFile", Storage="_InternshipDirectory", ThisKey="InternshipDirectoryId", OtherKey="Id", IsForeignKey=true)]
		public InternshipDirectory InternshipDirectory
		{
			get
			{
				return this._InternshipDirectory.Entity;
			}
			set
			{
				InternshipDirectory previousValue = this._InternshipDirectory.Entity;
				if (((previousValue != value) 
							|| (this._InternshipDirectory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InternshipDirectory.Entity = null;
						previousValue.ConfigFiles.Remove(this);
					}
					this._InternshipDirectory.Entity = value;
					if ((value != null))
					{
						value.ConfigFiles.Add(this);
						this._InternshipDirectoryId = value.Id;
					}
					else
					{
						this._InternshipDirectoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InternshipDirectory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InternshipDirectories")]
	public partial class InternshipDirectory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _InternshipWeekFolder;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<ConfigFile> _ConfigFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInternshipWeekFolderChanging(string value);
    partial void OnInternshipWeekFolderChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public InternshipDirectory()
		{
			this._ConfigFiles = new EntitySet<ConfigFile>(new Action<ConfigFile>(this.attach_ConfigFiles), new Action<ConfigFile>(this.detach_ConfigFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternshipWeekFolder", DbType="NVarChar(500)")]
		public string InternshipWeekFolder
		{
			get
			{
				return this._InternshipWeekFolder;
			}
			set
			{
				if ((this._InternshipWeekFolder != value))
				{
					this.OnInternshipWeekFolderChanging(value);
					this.SendPropertyChanging();
					this._InternshipWeekFolder = value;
					this.SendPropertyChanged("InternshipWeekFolder");
					this.OnInternshipWeekFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InternshipDirectory_ConfigFile", Storage="_ConfigFiles", ThisKey="Id", OtherKey="InternshipDirectoryId")]
		public EntitySet<ConfigFile> ConfigFiles
		{
			get
			{
				return this._ConfigFiles;
			}
			set
			{
				this._ConfigFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConfigFiles(ConfigFile entity)
		{
			this.SendPropertyChanging();
			entity.InternshipDirectory = this;
		}
		
		private void detach_ConfigFiles(ConfigFile entity)
		{
			this.SendPropertyChanging();
			entity.InternshipDirectory = null;
		}
	}
}
#pragma warning restore 1591
